package centrifuge

import (
	"github.com/centrifugal/protocol"
)

// ClientInfo is short information about client connection.
type ClientInfo struct {
	User     string
	Client   string
	ConnInfo []byte
	ChanInfo []byte
}

func (i ClientInfo) fromProto(pi *protocol.ClientInfo) {
	i.User = pi.User
	i.Client = pi.Client
	i.ConnInfo = pi.ConnInfo
	i.ChanInfo = pi.ChanInfo
}

//// Publication contains Data sent to channel subscribers.
//// In channels with recover option on it also has incremental Sequence.
//// If Publication sent from client side it can also have ClientInfo (otherwise nil).
//type Publication struct {
//	Sequence   uint64
//	Data       []byte
//	ClientInfo *ClientInfo
//}

// Define some aliases to internal protocol types generated by gogo/protobuf.
// This allows us to simply expose only subset of useful types to centrifuge
// package keeping types that are not supposed to be in public API hidden from
// library users.
type (
	// Raw represents raw bytes.
	Raw = protocol.Raw
	// Publication allows to deliver custom payload to all channel subscribers.
	Publication = protocol.Publication
)
